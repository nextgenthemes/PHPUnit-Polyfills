name: Test

on:
  # Run on all pushes and on all pull requests.
  push:
  pull_request:
  # Allow manually triggering the workflow.
  workflow_dispatch:

# Cancels all previous workflow runs for the same branch that have not yet completed.
concurrency:
  # The concurrency group contains the workflow name and the branch name.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  #### TEST STAGE ####
  test:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        php: ['5.6', '7.0', '7.1', '7.2', '7.3', '7.4', '8.0', '8.1', '8.2']
        phpunit: ['auto']
        experimental: [false]

        include:
          # Test against a version on the low-end of the PHPUnit versions supported for each PHP version.
          # Using the Composer `--prefer-lowest` option is, unfortunately, not viable, as
          # it would result PHP 5.6 - 7.4 all using PHPUnit 5.7.21, which is not the intention.
          # It also would run into trouble with PHP 8.5.12 being used on PHP 8.0+, while the
          # 8.5.12 release still contained a bug which makes it incompatible with PHP 8.1+,
          # even though it officially allows for it..
          - php: '5.6'
            phpunit: '5.7.21'
            experimental: false
          - php: '7.0'
            phpunit: '5.7.27'
            experimental: false
          - php: '7.1'
            phpunit: '5.7.21'
            experimental: false
          - php: '7.2'
            phpunit: '6.3.1'
            experimental: false
          - php: '7.3'
            phpunit: '7.2.7'
            experimental: false
          - php: '7.4'
            phpunit: '8.1.6'
            experimental: false
          - php: '8.0'
            phpunit: '8.5.16'
            experimental: false
          - php: '8.0'
            phpunit: '9.3.0'
            experimental: false
          - php: '8.1'
            phpunit: '9.3.0'
            experimental: false
          - php: '8.1'
            phpunit: '10.0.0'
            experimental: false
          - php: '8.2'
            phpunit: '9.3.0'
            experimental: false
          - php: '8.2'
            phpunit: '10.0.0'
            experimental: false

          # Experimental builds.
          - php: '8.3'
            phpunit: '^9.6'
            experimental: true
          - php: '8.3'
            phpunit: 'auto' # PHPUnit 10.x.
            experimental: true

          - php: '8.2'
            phpunit: 'dev-main'
            experimental: true

    name: "Tests: PHP ${{ matrix.php }} - PHPUnit: ${{matrix.phpunit}}"

    continue-on-error: ${{ matrix.experimental }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          ini-values: zend.assertions=1, error_reporting=-1, display_errors=On
          coverage: none

      - name: 'Composer: set PHPUnit version for tests'
        if: ${{ matrix.phpunit != 'auto' }}
        run: composer require --no-update phpunit/phpunit:"${{ matrix.phpunit }}" --no-interaction

      # Install dependencies and handle caching in one go.
      # @link https://github.com/marketplace/actions/install-composer-dependencies
      - name: Install Composer dependencies - normal
        if: matrix.php != '8.3'
        uses: "ramsey/composer-install@v2"
        with:
          # Bust the cache at least once a month - output format: YYYY-MM.
          custom-cache-suffix: $(date -u "+%Y-%m")

      - name: Install Composer dependencies - ignore PHP restrictions
        if: matrix.php == '8.3'
        uses: "ramsey/composer-install@v2"
        with:
          composer-options: --ignore-platform-req=php+
          # Bust the cache at least once a month - output format: YYYY-MM.
          custom-cache-suffix: $(date -u "+%Y-%m")

      - name: Grab PHPUnit version
        id: phpunit_version
        run: echo "VERSION=$(vendor/bin/phpunit --version | grep --only-matching --max-count=1 --extended-regexp '\b[0-9]+\.[0-9]+')" >> $GITHUB_OUTPUT

      - name: "DEBUG: Show grabbed version"
        run: echo ${{ steps.phpunit_version.outputs.VERSION }}

      - name: "Run the unit tests (PHPUnit < 10)"
        if: ${{ ! startsWith( steps.phpunit_version.outputs.VERSION, '10.' ) }}
        run: composer test

      - name: "Run the unit tests against PHPUnit 10.0"
        if: ${{ startsWith( steps.phpunit_version.outputs.VERSION, '10.' ) }}
        # Don't fail the build on a test run failure against a future PHPUnit version.
        continue-on-error: ${{ matrix.phpunit == 'dev-main' }}
        run: composer test10
